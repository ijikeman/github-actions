name: Run Playbooks

on:
  workflow_call:

env:
  setting_file: 'playbooks.yml'
  MAX_MATRIX: '1'

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      something: ${{ steps.make-matrix.outputs.value }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@main
        with:
          node-version: '16'

      - name: Install js-yaml
        run: npm install js-yaml

      - name: Read setting file
        id: read-setting
        uses: actions/github-script@main
        with:
          script: |
            const fs = require('fs');
            const yaml = require('js-yaml');
            const fileContents = fs.readFileSync('playbooks.yml', 'utf8');
            const data = yaml.load(fileContents);
            return JSON.stringify(data);

      - name: make values
        id: make-matrix
        run: |
          # sample
          echo '["{\"name\": \"a\"}","{\"name\": \"b\"}"]' | jq -c

          result='${{ steps.read-setting.outputs.result }}'
          # initial var
          list='['
          # jsonの配列単位でイテレーション
          for s in $(echo $result|jq -r|jq .[]| jq -c|jq @json); do
            # "", で囲って配列として連結
            list=${list}"${s}",
          done
          # 変数listの最後の文字','を']'に置換
          list=$(echo $list | sed -e 's/\,$//g')
          list=$list]
          # debug
          echo $list
          # set output
          echo "value=${list}"
          echo "value=${list}" >> $GITHUB_OUTPUT
        env:
          result: ${{ steps.read-setting.outputs.result }}
          # set output

  example_matrix:
    runs-on: ubuntu-20.04
    needs: set-matrix
    strategy:
      matrix:
        id: ${{fromJson(needs.set-matrix.outputs.something)}}
      max-parallel: 1 # 並列実行数を2に制限
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/matrix-test/
        with:
          MATRIX-ID: ${{ matrix.id }}
